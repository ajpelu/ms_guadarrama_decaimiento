[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Forest mortality at Guadarrama National Park",
    "section": "",
    "text": "This repository contains analysis for the study of several stands forests at Guadarrama National Park (Central Spain).\n\nTemporal analysis of several spectral indices from Remote sensing of forest stands with contrasting healthy status\nExploration of the cummulative precipitation of the meteorological statios close to our study sites\nSpatial dashboard viewer\n\n\nAuthors\n\nGuillermo Gea-Izquierdo  \nDarío Martín-Benito  \nIsmael Aranda …\nAntonio J. Pérez-Luque  \n…"
  },
  {
    "objectID": "iv_temporal_series.html",
    "href": "iv_temporal_series.html",
    "title": "Temporal analysis of IV",
    "section": "",
    "text": "To explore the temporal evolution of several spectral indices for forest stands with tree mortality comparing with control forest stands.\nTwo species: Pinus sylvestris and P. pinaster\nTwo sites; Valdemaqueda (pinaster) and Valsaín (sylvestris)\nSpectral product used:\n\nLandsat: several collections. We used the harmonized product. Spatial resolution = 30 m; temporal range: 1985-2023; temporal resolution = varies according to product used. More info.\nSentinel2: spatial resolution = 10-20 m; temporal range: 2017-2023; temporal resolution = 25 days\nMODIS MOD13Q1: spatial resolution = 250 m; temporal range: 2000-2023; temporal resolution = 23 days"
  },
  {
    "objectID": "iv_temporal_series.html#aims",
    "href": "iv_temporal_series.html#aims",
    "title": "Temporal analysis of IV",
    "section": "",
    "text": "To explore the temporal evolution of several spectral indices for forest stands with tree mortality comparing with control forest stands.\nTwo species: Pinus sylvestris and P. pinaster\nTwo sites; Valdemaqueda (pinaster) and Valsaín (sylvestris)\nSpectral product used:\n\nLandsat: several collections. We used the harmonized product. Spatial resolution = 30 m; temporal range: 1985-2023; temporal resolution = varies according to product used. More info.\nSentinel2: spatial resolution = 10-20 m; temporal range: 2017-2023; temporal resolution = 25 days\nMODIS MOD13Q1: spatial resolution = 250 m; temporal range: 2000-2023; temporal resolution = 23 days"
  },
  {
    "objectID": "iv_temporal_series.html#prepare-data",
    "href": "iv_temporal_series.html#prepare-data",
    "title": "Temporal analysis of IV",
    "section": "Prepare Data",
    "text": "Prepare Data\n\nAll the data were obtained using GEE\nWe applied several filters to remove low quality data (avoid clouds, etc)\n\n\nlibrary(tidyverse)\nlibrary(Kendall)\nlibrary(trend)\nlibrary(kableExtra)\noptions(tidyverse.quiet = TRUE)\n\n\nraw_landsat &lt;- read_csv(\"data/raw/guadarrama_pinaster_syl_landsat_c02.csv\")\nraw_modis &lt;- read_csv(\"data/raw/guadarrama_pinaster_syl_modis_mod13q1.csv\")\npixel_id &lt;- read_csv(\"data/geoinfo/pixel_idtree.csv\")"
  },
  {
    "objectID": "iv_temporal_series.html#landsat",
    "href": "iv_temporal_series.html#landsat",
    "title": "Temporal analysis of IV",
    "section": "Landsat",
    "text": "Landsat\n\nraw_landsat &lt;- read_csv(\"data/raw/guadarrama_pinaster_syl_landsat_c02.csv\") |&gt; \n  rename(evi = EVI, ndvi = NDVI) |&gt;\n  mutate(date = as.Date(as.character(date), format=\"%Y%m%d\")) |&gt; \n  mutate(date = as.Date(date, format = \"%Y%m%d\")) |&gt; \n  dplyr::select(evi, ndvi, date, sp, status, name) |&gt; \n  mutate(year = lubridate::year(date), \n         month = lubridate::month(date)) |&gt; \n  dplyr::filter(!(name %in% c(\"S01\", \"S02\", \"S03\", \"S04\", \"S05\", \"S06\")))\n\n\nEVI\n\nlandsat_evi &lt;- raw_landsat |&gt; \n  dplyr::select(-ndvi) |&gt; \n  filter(!is.na(evi)) |&gt; \n  rename(value=evi) |&gt; \n  mutate(iv=\"evi\")\n\nlandsat_evi_id &lt;- landsat_evi |&gt; inner_join(pixel_id) |&gt; \n  dplyr::select(-pixel_sentinel, -pixel_modis) \n  \nlandsat_evi_yearly &lt;- landsat_evi_id |&gt; \n  group_by(sp, status, year) |&gt; \n    summarise(mean = mean(value, na.rm = TRUE), \n            sd = sd(value, na.rm = TRUE), \n            se = sd/sqrt(length(value)),\n            n = length(value))\n\n\ncolores_status &lt;-  c(\"Decaimiento\" = \"red\", \n                     \"Sanos\" =\"blue\")\n\n\nlandsat_evi_yearly |&gt; \n  ggplot(aes(x = year, y = mean, fill=status, colour=status)) +\n  geom_line() +  \n  geom_ribbon(data=landsat_evi_yearly, \n              aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) +\n  theme_bw() +\n  facet_wrap(~sp, ncol = 1) + \n  scale_x_continuous(limits = c(1986, 2023), breaks = seq(1986,2023, by=4)) +\n  theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) + \n  ylab(\"Annual EVI (Landsat)\") +\n  scale_fill_manual(values = colores_status)\n\n\n\n\n\n\n\n\n\nTemporal trend\n\n\n\n\n\nMann-Kendall and Seil temporal trend test for yearly EVI (Landsat)\n\n\nsp\nstatus\nmean_tau\nmean_pvalue_mk\nmean_senslope\nmean_pvalue_sen\n\n\n\n\nPinus pinaster\nDecaimiento\n0.568\n0e+00\n0.00124\n0e+00\n\n\nSanos\n0.547\n0e+00\n0.00133\n0e+00\n\n\nPinus sylvestris\nDecaimiento\n0.447\n7e-05\n0.00125\n1e-04\n\n\nSanos\n0.541\n0e+00\n0.00227\n0e+00\n\n\n\n\n\n\n\n\n\n\nNDVI\n\nlandsat_ndvi &lt;- raw_landsat |&gt; \n  dplyr::select(-evi) |&gt; \n  filter(!is.na(ndvi)) |&gt; \n  rename(value=ndvi) |&gt; \n  mutate(iv=\"ndvi\")\n\nlandsat_ndvi_id &lt;- landsat_ndvi |&gt; inner_join(pixel_id) |&gt;\n    dplyr::select(-pixel_sentinel, -pixel_modis) \n\nlandsat_ndvi_yearly &lt;- landsat_ndvi_id |&gt; \n  group_by(sp, status, year) |&gt; \n    summarise(mean = mean(value, na.rm = TRUE), \n            sd = sd(value, na.rm = TRUE), \n            se = sd/sqrt(length(value)),\n            n = length(value))\n\n\nlandsat_ndvi_yearly |&gt; \n  ggplot(aes(x = year, y = mean, fill=status, colour=status)) +\n  geom_line() +  \n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) +\n  theme_bw() +\n  facet_wrap(~sp, ncol = 1) + \n  scale_x_continuous(limits = c(1986, 2023), breaks = seq(1986,2023, by=4)) +\n  theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) + \n  ylab(\"Annual NDVI (Landsat)\") +\n  scale_fill_manual(values = colores_status)\n\n\n\n\n\n\n\n\n\nTemporal trend\n\n\n\n\n\nMann-Kendall and Seil temporal trend test for yearly NDVI (Landsat)\n\n\nsp\nstatus\nmean_tau\nmean_pvalue_mk\nmean_senslope\nmean_pvalue_sen\n\n\n\n\nPinus pinaster\nDecaimiento\n0.633\n0\n0.00299\n0\n\n\nSanos\n0.525\n0\n0.00286\n0\n\n\nPinus sylvestris\nDecaimiento\n0.549\n0\n0.00211\n0\n\n\nSanos\n0.676\n0\n0.00506\n0\n\n\n\n\n\n\n\n\n\n\nSentinel\n\nsee this paper for some indexes used\n\n\nraw_sentinel &lt;- read_csv(\"data/raw/guadarrama_pinaster_syl_sentinel_harmonized.csv\") |&gt; \n  mutate(date = as.Date(as.character(substr(`system:index`, 1,8)), format=\"%Y%m%d\")) |&gt; \n  mutate(year = lubridate::year(date), \n         month = lubridate::month(date)) |&gt; \n  dplyr::select(-`system:index`,-`.geo`, -ele, -numero, -tipo) |&gt; \n  filter(!is.na(EVI)) |&gt; \n  janitor::clean_names()\n  \n\nsentinel &lt;- raw_sentinel |&gt; \n  pivot_longer(evi:vig,  names_to = \"iv\", values_to = \"value\") |&gt; \n  dplyr::filter(!(name %in% c(\"S01\", \"S02\", \"S03\", \"S04\", \"S05\", \"S06\")))\n\nsentinel_date &lt;-\n  sentinel |&gt; \n  filter(date &gt; as.Date(\"2017-06-01\")) |&gt; \n  mutate(date2 = as.Date(paste0(format(date, \"%Y-%m\"), \"-01\"), format = \"%Y-%m-%d\")) |&gt; \n  group_by(sp, status, date2, iv) |&gt; \n  summarise(mean = mean(value, na.rm = TRUE), \n            sd = sd(value, na.rm = TRUE), \n            se = sd/sqrt(length(value)),\n            n = length(value)) |&gt; \n  ungroup()\n\n\nNDVI\n\nsentinel_date |&gt; \n  # filter(iv %in% c('savi','evi','ndvi','nbr')) |&gt; \n  filter(iv == \"ndvi\") |&gt; \n  filter(!(date2 == \"2018-05-01\" & sp == \"Pinus sylvestris\" & status == \"Sanos\")) |&gt; \n  ggplot(aes(x = date2, y = mean, fill=status, colour=status, group = status)) +\n  geom_line() +  \n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) +\n  theme_bw() +\n  facet_wrap(~sp, ncol=1) + theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) + \n  ylab(\"NDVI (Sentinel)\") +\n  scale_fill_manual(values = colores_status) +\n  scale_x_date(date_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  xlab(\"Date\") +\n  scale_y_continuous(breaks = c(0, 0.25,0.5,0.75))\n\n\n\n\n\n\n\n\n\n\nEVI\n\nsentinel_date |&gt; \n  # filter(iv %in% c('savi','evi','ndvi','nbr')) |&gt; \n  filter(iv == \"evi\") |&gt; \n  filter(!(date2 == \"2019-11-01\" & sp == \"Pinus sylvestris\" & status == \"Sanos\")) |&gt; \n  filter(!(date2 == \"2018-05-01\" & sp == \"Pinus sylvestris\" & status == \"Decaimiento\")) |&gt; \n  ggplot(aes(x = date2, y = mean, fill=status, colour=status, group = status)) +\n  geom_line() +  \n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) +\n  theme_bw() +\n  facet_wrap(~sp, ncol=1) + theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) + \n  ylab(\"EVI (Sentinel)\") +\n  scale_fill_manual(values = colores_status) + \n  scale_x_date(date_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  xlab(\"Date\")\n\n\n\n\n\n\n\n\n\n\nNBR\n\nsentinel_date |&gt; \n  # filter(iv %in% c('savi','evi','ndvi','nbr')) |&gt; \n  filter(iv == \"nbr\") |&gt; \n  filter(!(date2 == \"2018-05-01\" & sp == \"Pinus sylvestris\" & status == \"Sanos\")) |&gt; \n  ggplot(aes(x = date2, y = mean, fill=status, colour=status, group = status)) +\n  geom_line() +  \n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) +\n  theme_bw() +\n  facet_wrap(~sp, ncol=1) + theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) + \n  ylab(\"NBR (Sentinel)\") +\n  scale_fill_manual(values = colores_status) + \n  scale_x_date(date_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  xlab(\"Date\")"
  },
  {
    "objectID": "iv_temporal_series.html#modis",
    "href": "iv_temporal_series.html#modis",
    "title": "Temporal analysis of IV",
    "section": "MODIS",
    "text": "MODIS\n\nmodis &lt;- raw_modis |&gt;\n  mutate(date = as.Date(str_replace_all(substr(`system:index`, 1, 10), \"_\", \"-\"),\n                        format = \"%Y-%m-%d\"),\n         evi = EVI*0.0001,\n         ndvi = NDVI*0.0001) |&gt; \n    dplyr::filter(!(name %in% c(\"S01\", \"S02\", \"S03\", \"S04\", \"S05\", \"S06\"))) |&gt; \n  dplyr::select(sp, status, date, evi, ndvi) |&gt; \n  unique()\n\n\n\n\ndf_modis &lt;- modis |&gt; \n  pivot_longer(evi:ndvi, \n               names_to = \"iv\", \n               values_to = \"value\")\n\ndf_modis_date &lt;- df_modis |&gt; \n  mutate(year = lubridate::year(date)) |&gt; \n  group_by(sp, status, year, iv) |&gt; \n  summarise(mean = mean(value, na.rm = TRUE), \n            sd = sd(value, na.rm = TRUE), \n            se = sd/sqrt(length(value)),\n            cv = sd/mean*100,\n            n = length(value))\n\n\ncolores_status &lt;-  c(\"Decaimiento\" = \"red\", \n                     \"Sanos\" =\"blue\")\n\n\ndf_modis_date |&gt; \n  filter(iv == \"evi\") |&gt; \n  ggplot(aes(x=year, y=mean, fill=status, colour=status, group=status)) +\n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) + \n  geom_point() + \n  geom_line() + \n  facet_wrap(~sp, ncol = 1) +\n  theme_bw() +\n    theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) +\n  ylab(\"Annual EVI (MODIS)\") +\n  scale_fill_manual(values = colores_status) +\n  scale_colour_manual(values = colores_status)\n\n\n\n\n\n\n\n\n\n#| fig-width: 10\n#| fig-height: 6\n\ndf_modis_date |&gt; \n  filter(iv == \"ndvi\") |&gt; \n  ggplot(aes(x=year, y=mean, fill=status, colour=status, group=status)) +\n  geom_ribbon(aes(ymin = (mean - se), ymax=(mean+se)), colour=NA, alpha=.2) + \n  geom_point() + \n  geom_line() + \n  facet_wrap(~sp, ncol = 1) +\n  theme_bw() +\n    theme(\n    panel.grid = element_blank(), \n    strip.text = element_text(face = \"italic\"),\n    strip.background = element_rect(fill = \"white\"),\n    legend.position = \"bottom\"\n  ) +\n  ylab(\"Annual NDVI (MODIS)\") +\n  scale_fill_manual(values = colores_status) +\n  scale_colour_manual(values = colores_status)"
  },
  {
    "objectID": "cummulative_precipitation.html",
    "href": "cummulative_precipitation.html",
    "title": "Precipitation",
    "section": "",
    "text": "To explore the cummulative precipitation profile (hydrological year) of each of the sites.\n\n\nlibrary(tidyverse)\nlibrary(infer)\nlibrary(ggrepel)\nlibrary(plotly)\n\nprec_valde &lt;- read_csv(\"data/climate/clim_daily_corr_valdemaqueda.csv\") |&gt; \n  filter(variable == \"P77\") |&gt; \n  dplyr::select(date, doy = DOY, value, name) |&gt; \n  filter(!is.na(value))\n\n\ndaily_valsain &lt;- read_delim(\"data/climate/ponton_daily.csv\", delim = \";\") |&gt; \n  mutate(date = as.Date(Date, format = \"%d/%m/%Y\")) |&gt; \n  dplyr::select(date, yday = Day, doy = DOY, year = Year, month = Month, prec = PREC)\n\nmonthly_valsain &lt;- daily_valsain |&gt; \n  mutate(month_names = strftime(date, '%b')) |&gt;\n  group_by(year,month, month_names) |&gt; \n  summarise(prec = sum(prec)) |&gt; \n  mutate(\n    hydro_month = case_when(\n      month &gt;= 10 ~ (month - 9), \n      TRUE ~ month + 3), \n    hydro_year = case_when(\n      month &gt;= 10 ~ (year + 1), \n      TRUE ~ year), \n    name_m = case_when(\n      month &gt;= 10 ~ paste0(month_names, \"[-1]\"), \n      TRUE ~ month_names\n    ))\n\n\ncum_valsain &lt;- monthly_valsain |&gt; \n  ungroup() |&gt; \n  dplyr::select(prec, hydro_month, hydro_year, name_m) |&gt; \n  mutate(hydro_date = paste(hydro_year, sprintf(\"%02d\", hydro_month),\n                            \"01\", sep = \"-\")) |&gt; \n  arrange(hydro_year, hydro_month) |&gt; \n  group_by(hydro_year) |&gt;\n  mutate(cum_prec = cumsum(prec)) |&gt; \n  ungroup() |&gt; \n  mutate(hydro_month_sort = fct_relevel(name_m, \"Oct[-1]\",\"Nov[-1]\",\"Dec[-1]\",\n                                 \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\n                                  \"Jun\",\"Jul\",\"Aug\",\"Sep\"))\n  \n\ncum_average &lt;- cum_valsain |&gt; \n  group_by(hydro_month, name_m) |&gt; \n  summarise(mean = mean(cum_prec, na.rm = TRUE), \n            sd = sd(cum_prec, na.rm = TRUE), \n            se = sd/sqrt(length(cum_prec))) \n\n\n\n\ncompute_bootstrap_ci &lt;- function(data, var, n_boots = 1000, conf_level = 0.95) {\n  # Perform bootstrapping\n  boot_results &lt;- data |&gt;\n    specify(response = !!sym(var)) |&gt;\n    generate(reps = n_boots, type = \"bootstrap\") |&gt;\n    calculate(stat = \"mean\")\n\n  # Compute the confidence interval\n  ci &lt;- boot_results |&gt;\n    get_confidence_interval(level = conf_level, type = \"percentile\")\n\n  return(ci)\n}\n\n# Group by hydro_month_sort and calculate the mean with bootstrap CI\nbootstrap_results &lt;- cum_valsain |&gt;\n  group_by(hydro_month_sort) |&gt;\n  summarize(\n    mean_prec = mean(cum_prec),\n    ci = list(compute_bootstrap_ci(cur_data(), \"cum_prec\"))\n  )\n\n# Extract lower and upper bounds of the CI for easier interpretation\nbootstrap_results &lt;- bootstrap_results |&gt;\n  mutate(\n    lower_ci = map_dbl(ci, ~ .x$lower_ci),\n    upper_ci = map_dbl(ci, ~ .x$upper_ci)\n  ) |&gt; \n   mutate(hydro_year = \"mean\") |&gt; \n  rename(cum_prec = mean_prec)\n\n\ncum_average_formatted &lt;- cum_average |&gt; \n  mutate(hydro_year = \"mean\") |&gt; \n  rename(cum_prec = mean) |&gt; \n  ungroup() |&gt; \n  mutate(hydro_month_sort = fct_relevel(name_m, \"Oct[-1]\",\"Nov[-1]\",\"Dec[-1]\",\n                                 \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\n                                  \"Jun\",\"Jul\",\"Aug\",\"Sep\"))\n\n\nselected_years &lt;- cum_valsain |&gt; \n  filter(hydro_year %in% c(1966, 1995, 2005, 2021,2022)) \n\n\nselected_years_labels &lt;- selected_years |&gt; \n  filter(hydro_month_sort == \"Sep\") \n\n\nselected_years_labels$colores &lt;- c(\"blue\", \"red\", \"brown\",\"lightblue\", \"orange\")\n\n\nbootstrap_results |&gt; \n  ggplot(aes(x=hydro_month_sort, y=cum_prec, group=as.factor(hydro_year))) +\n  geom_ribbon(aes(ymin = lower_ci, ymax= upper_ci), colour=NA, alpha=.2) +\n  geom_line(colour=\"black\") +\n  geom_line(data = selected_years, aes(colour = as.factor(hydro_year))) +\n  scale_x_discrete(labels = parse(text = levels(bootstrap_results$hydro_month_sort))) +\n  geom_label_repel(\n    data = selected_years_labels, \n    aes(x=hydro_month_sort, y=cum_prec, label = hydro_year, fill = as.factor(hydro_year)), colour = \"white\",\n    nudge_x = .1,\n    nudge_y = -.5\n  ) +\n  scale_colour_manual(values = c(\"1966\" = \"blue\", \n                                 \"2005\" = \"red\", \n                                 \"1995\" = \"brown\",\n                                 \"2021\" = \"lightblue\",\n                                 \"2022\" = \"orange\")) +\n  scale_fill_manual(values = c(\"1966\" = \"blue\", \n                                 \"2005\" = \"red\", \n                                 \"1995\" = \"brown\",\n                                 \"2021\" = \"lightblue\",\n                                 \"2022\" = \"orange\")) +\n  theme_bw() +\n  theme(\n    panel.grid = element_blank(), \n    legend.position = \"none\",\n     plot.margin = margin(1, 1, 1, 1, \"cm\")) +\n  ylab(\"Cummulative monthly precipitation (mm)\") +\n  xlab(\"Hydrological month\") +\n  ggtitle(\"Valsaín\")\n\n\n\n\n\n\n\n\n\ng &lt;- cum_valsain |&gt; \n  ggplot(aes(x=hydro_month_sort, y=cum_prec, group=1)) +\n  geom_line(aes(colour=as.factor(hydro_year))) +\n  geom_line(data = cum_average_formatted, aes(group=1), colour = \"blue\", lwd=1.5) +\n  geom_ribbon(data = bootstrap_results, \n              aes(ymin = lower_ci, ymax = upper_ci), fill = \"blue\", alpha = .5) + \n  scale_x_discrete(labels = parse(text = levels(bootstrap_results$hydro_month_sort))) +\n    theme_bw() +\n  theme(\n    panel.grid = element_blank(), \n    legend.position = \"right\", \n     plot.margin = margin(1, 1, 1, 1, \"cm\")) +\n  ylab(\"Cummulative monthly precipitation (mm)\") +\n  xlab(\"Hydrological month\") +\n  ggtitle(\"Valsaín\")\n\np &lt;- ggplotly(g)\n\np &lt;- p |&gt; \n  layout(\n    legend = list(\n      title = list(text = \"Hydro Year\"),\n      orientation = \"v\",\n      x = 1,\n      y = 1,\n      bgcolor = \"white\",\n      bordercolor = \"black\",\n      borderwidth = 1\n    ),\n    updatemenus = list(\n      list(\n        type = \"buttons\",\n        direction = \"left\",\n        buttons = list(\n          list(\n            method = \"restyle\",\n            args = list(\"visible\", list(FALSE)),  # Hide all\n            label = \"Hide All\"\n          ),\n          list(\n            method = \"restyle\",\n            args = list(\"visible\", list(TRUE)),   # Show all\n            label = \"Show All\"\n          )\n        ),\n        showactive = TRUE,\n        x = 0.15,  # Positioning\n        y = .9,\n        xanchor = \"center\",\n        yanchor = \"top\"\n      )\n    )\n  )\n\np"
  },
  {
    "objectID": "cummulative_precipitation.html#aim",
    "href": "cummulative_precipitation.html#aim",
    "title": "Precipitation",
    "section": "",
    "text": "To explore the cummulative precipitation profile (hydrological year) of each of the sites.\n\n\nlibrary(tidyverse)\nlibrary(infer)\nlibrary(ggrepel)\nlibrary(plotly)\n\nprec_valde &lt;- read_csv(\"data/climate/clim_daily_corr_valdemaqueda.csv\") |&gt; \n  filter(variable == \"P77\") |&gt; \n  dplyr::select(date, doy = DOY, value, name) |&gt; \n  filter(!is.na(value))\n\n\ndaily_valsain &lt;- read_delim(\"data/climate/ponton_daily.csv\", delim = \";\") |&gt; \n  mutate(date = as.Date(Date, format = \"%d/%m/%Y\")) |&gt; \n  dplyr::select(date, yday = Day, doy = DOY, year = Year, month = Month, prec = PREC)\n\nmonthly_valsain &lt;- daily_valsain |&gt; \n  mutate(month_names = strftime(date, '%b')) |&gt;\n  group_by(year,month, month_names) |&gt; \n  summarise(prec = sum(prec)) |&gt; \n  mutate(\n    hydro_month = case_when(\n      month &gt;= 10 ~ (month - 9), \n      TRUE ~ month + 3), \n    hydro_year = case_when(\n      month &gt;= 10 ~ (year + 1), \n      TRUE ~ year), \n    name_m = case_when(\n      month &gt;= 10 ~ paste0(month_names, \"[-1]\"), \n      TRUE ~ month_names\n    ))\n\n\ncum_valsain &lt;- monthly_valsain |&gt; \n  ungroup() |&gt; \n  dplyr::select(prec, hydro_month, hydro_year, name_m) |&gt; \n  mutate(hydro_date = paste(hydro_year, sprintf(\"%02d\", hydro_month),\n                            \"01\", sep = \"-\")) |&gt; \n  arrange(hydro_year, hydro_month) |&gt; \n  group_by(hydro_year) |&gt;\n  mutate(cum_prec = cumsum(prec)) |&gt; \n  ungroup() |&gt; \n  mutate(hydro_month_sort = fct_relevel(name_m, \"Oct[-1]\",\"Nov[-1]\",\"Dec[-1]\",\n                                 \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\n                                  \"Jun\",\"Jul\",\"Aug\",\"Sep\"))\n  \n\ncum_average &lt;- cum_valsain |&gt; \n  group_by(hydro_month, name_m) |&gt; \n  summarise(mean = mean(cum_prec, na.rm = TRUE), \n            sd = sd(cum_prec, na.rm = TRUE), \n            se = sd/sqrt(length(cum_prec))) \n\n\n\n\ncompute_bootstrap_ci &lt;- function(data, var, n_boots = 1000, conf_level = 0.95) {\n  # Perform bootstrapping\n  boot_results &lt;- data |&gt;\n    specify(response = !!sym(var)) |&gt;\n    generate(reps = n_boots, type = \"bootstrap\") |&gt;\n    calculate(stat = \"mean\")\n\n  # Compute the confidence interval\n  ci &lt;- boot_results |&gt;\n    get_confidence_interval(level = conf_level, type = \"percentile\")\n\n  return(ci)\n}\n\n# Group by hydro_month_sort and calculate the mean with bootstrap CI\nbootstrap_results &lt;- cum_valsain |&gt;\n  group_by(hydro_month_sort) |&gt;\n  summarize(\n    mean_prec = mean(cum_prec),\n    ci = list(compute_bootstrap_ci(cur_data(), \"cum_prec\"))\n  )\n\n# Extract lower and upper bounds of the CI for easier interpretation\nbootstrap_results &lt;- bootstrap_results |&gt;\n  mutate(\n    lower_ci = map_dbl(ci, ~ .x$lower_ci),\n    upper_ci = map_dbl(ci, ~ .x$upper_ci)\n  ) |&gt; \n   mutate(hydro_year = \"mean\") |&gt; \n  rename(cum_prec = mean_prec)\n\n\ncum_average_formatted &lt;- cum_average |&gt; \n  mutate(hydro_year = \"mean\") |&gt; \n  rename(cum_prec = mean) |&gt; \n  ungroup() |&gt; \n  mutate(hydro_month_sort = fct_relevel(name_m, \"Oct[-1]\",\"Nov[-1]\",\"Dec[-1]\",\n                                 \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\n                                  \"Jun\",\"Jul\",\"Aug\",\"Sep\"))\n\n\nselected_years &lt;- cum_valsain |&gt; \n  filter(hydro_year %in% c(1966, 1995, 2005, 2021,2022)) \n\n\nselected_years_labels &lt;- selected_years |&gt; \n  filter(hydro_month_sort == \"Sep\") \n\n\nselected_years_labels$colores &lt;- c(\"blue\", \"red\", \"brown\",\"lightblue\", \"orange\")\n\n\nbootstrap_results |&gt; \n  ggplot(aes(x=hydro_month_sort, y=cum_prec, group=as.factor(hydro_year))) +\n  geom_ribbon(aes(ymin = lower_ci, ymax= upper_ci), colour=NA, alpha=.2) +\n  geom_line(colour=\"black\") +\n  geom_line(data = selected_years, aes(colour = as.factor(hydro_year))) +\n  scale_x_discrete(labels = parse(text = levels(bootstrap_results$hydro_month_sort))) +\n  geom_label_repel(\n    data = selected_years_labels, \n    aes(x=hydro_month_sort, y=cum_prec, label = hydro_year, fill = as.factor(hydro_year)), colour = \"white\",\n    nudge_x = .1,\n    nudge_y = -.5\n  ) +\n  scale_colour_manual(values = c(\"1966\" = \"blue\", \n                                 \"2005\" = \"red\", \n                                 \"1995\" = \"brown\",\n                                 \"2021\" = \"lightblue\",\n                                 \"2022\" = \"orange\")) +\n  scale_fill_manual(values = c(\"1966\" = \"blue\", \n                                 \"2005\" = \"red\", \n                                 \"1995\" = \"brown\",\n                                 \"2021\" = \"lightblue\",\n                                 \"2022\" = \"orange\")) +\n  theme_bw() +\n  theme(\n    panel.grid = element_blank(), \n    legend.position = \"none\",\n     plot.margin = margin(1, 1, 1, 1, \"cm\")) +\n  ylab(\"Cummulative monthly precipitation (mm)\") +\n  xlab(\"Hydrological month\") +\n  ggtitle(\"Valsaín\")\n\n\n\n\n\n\n\n\n\ng &lt;- cum_valsain |&gt; \n  ggplot(aes(x=hydro_month_sort, y=cum_prec, group=1)) +\n  geom_line(aes(colour=as.factor(hydro_year))) +\n  geom_line(data = cum_average_formatted, aes(group=1), colour = \"blue\", lwd=1.5) +\n  geom_ribbon(data = bootstrap_results, \n              aes(ymin = lower_ci, ymax = upper_ci), fill = \"blue\", alpha = .5) + \n  scale_x_discrete(labels = parse(text = levels(bootstrap_results$hydro_month_sort))) +\n    theme_bw() +\n  theme(\n    panel.grid = element_blank(), \n    legend.position = \"right\", \n     plot.margin = margin(1, 1, 1, 1, \"cm\")) +\n  ylab(\"Cummulative monthly precipitation (mm)\") +\n  xlab(\"Hydrological month\") +\n  ggtitle(\"Valsaín\")\n\np &lt;- ggplotly(g)\n\np &lt;- p |&gt; \n  layout(\n    legend = list(\n      title = list(text = \"Hydro Year\"),\n      orientation = \"v\",\n      x = 1,\n      y = 1,\n      bgcolor = \"white\",\n      bordercolor = \"black\",\n      borderwidth = 1\n    ),\n    updatemenus = list(\n      list(\n        type = \"buttons\",\n        direction = \"left\",\n        buttons = list(\n          list(\n            method = \"restyle\",\n            args = list(\"visible\", list(FALSE)),  # Hide all\n            label = \"Hide All\"\n          ),\n          list(\n            method = \"restyle\",\n            args = list(\"visible\", list(TRUE)),   # Show all\n            label = \"Show All\"\n          )\n        ),\n        showactive = TRUE,\n        x = 0.15,  # Positioning\n        y = .9,\n        xanchor = \"center\",\n        yanchor = \"top\"\n      )\n    )\n  )\n\np"
  },
  {
    "objectID": "iv_temporal_series.html#temporal-trends-of-evi",
    "href": "iv_temporal_series.html#temporal-trends-of-evi",
    "title": "Temporal analysis of IV",
    "section": "Temporal trends of EVI",
    "text": "Temporal trends of EVI"
  }
]